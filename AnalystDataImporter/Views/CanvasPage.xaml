<Page x:Class="AnalystDataImporter.Views.CanvasPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:viewModel="clr-namespace:AnalystDataImporter.ViewModels"
      xmlns:utilities="clr-namespace:AnalystDataImporter.Utilities"
      xmlns:behaviors="clr-namespace:AnalystDataImporter.Behaviors"
      x:Name="CurrentCanvasPage"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Canvas"
      Cursor="{Binding CurrentCursor}"
      >

    <Page.Resources>
        <Style x:Key="ToggleButtonBaseStyle" TargetType="Button">
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>
        <!--<Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="5"/>
        </Style>-->

        <DataTemplate x:Key="ElementTemplate" DataType="{x:Type viewModel:ElementViewModel}">

            <Grid>
                <!--Elipsa-->
                <!-- Interaction Behavior for Grid Size -->
                <b:Interaction.Behaviors>
                    <behaviors:GridSizeBehavior
                        ElementViewModel="{Binding}"
                        behaviors:SharedBehaviorProperties.ParentCanvas="{Binding ElementName=ElementCanvas}" />
                </b:Interaction.Behaviors>

                <!-- Border inside the Grid -->
                <Border BorderThickness="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="BorderBrush" Value="LightBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <!-- For buttons -->
                            <RowDefinition Height="Auto" />
                            <!-- For Canvas and DataGrid -->
                        </Grid.RowDefinitions>

                        <!-- Ellipse centered in the Inner Grid -->
                        <Ellipse Grid.Row="0" Width="50" Height="50" Fill="White" Stroke="Black" StrokeThickness="2"
                                 HorizontalAlignment="Center">
                            <b:Interaction.Behaviors>
                                <!--IsDraggingElementEnabled="{Binding ElementName=CurrentCanvasPage, Path=DataContext.CanvasViewModel.IsDraggingElementModeActive}"-->
                                <!--IsDrawingElementEnabled="{Binding ElementName=CurrentCanvasPage, Path=DataContext.CanvasViewModel.IsDrawingElementModeActive}"
                                IsDrawingRelationEnabled="{Binding ElementName=CurrentCanvasPage, Path=DataContext.CanvasViewModel.IsDrawingRelationModeActive}"-->
                                <behaviors:EllipseBehavior
                                    behaviors:SharedBehaviorProperties.ChangeCursorCommand="{Binding ElementName=CurrentCanvasPage, Path=DataContext.CanvasViewModel.ChangeCursorWhenOperatingElementCommand}"
                                    FinishDrawingElementCommand="{Binding ElementName=CurrentCanvasPage, Path=DataContext.CanvasViewModel.FinishDrawingElementCommand}"
                                    RelationStartOrEndElementSetCommand="{Binding ElementName=CurrentCanvasPage, Path=DataContext.CanvasViewModel.GetRelationStartOrEndElementCommand}"
                                    GridViewColumnDraggedSetCommand="{Binding ElementName=CurrentCanvasPage, Path=DataContext.CanvasViewModel.GetGridViewColumnDraggedSetCommand}"
                                    behaviors:SharedBehaviorProperties.ParentCanvas="{Binding ElementName=ElementCanvas}"
                                    ParentGrid="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" />
                            </b:Interaction.Behaviors>
                        </Ellipse>


                        <!-- TextBlock below the Ellipse in the Inner Grid -->
                        <TextBlock Grid.Row="1" Text="{Binding Label}" HorizontalAlignment="Center"
                                   VerticalAlignment="Top" Margin="0,5,0,0" />
                    </Grid>
                </Border>
            </Grid>

        </DataTemplate>

        <DataTemplate x:Key="RelationTemplate" DataType="{x:Type viewModel:RelationViewModel}">

            <Line X1="{Binding X1}" Y1="{Binding Y1}"
                  X2="{Binding X2}" Y2="{Binding Y2}"
                  StrokeThickness="2"
                  IsHitTestVisible="{Binding IsFinished, FallbackValue=True}">
                <Line.Style>
                    <Style TargetType="Line">
                        <Setter Property="Stroke" Value="Black" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter Property="Stroke" Value="LightBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Line.Style>
                <b:Interaction.Behaviors>
                    <!--IsEnabled="{Binding ElementName=CurrentCanvasPage, Path=DataContext.CanvasViewModel.IsDraggingElementModeActive}"-->
                    <behaviors:LineBehavior
                        RelationDeleteWhenOutsideCanvasCommand="{Binding ElementName=CurrentCanvasPage, Path=DataContext.CanvasViewModel.RelationDeleteWhenOutsideCanvasCommand}"
                        behaviors:SharedBehaviorProperties.ParentCanvas="{Binding ElementName=ElementCanvas}" />
                </b:Interaction.Behaviors>
            </Line>

        </DataTemplate>

        <utilities:MyTemplateSelector x:Key="MyTemplateSelector" 
                                      ElementTemplate="{StaticResource ElementTemplate}"
                                      RelationTemplate="{StaticResource RelationTemplate}" />
    </Page.Resources>

    <Grid>
        <!--Hlavni Grid pro Page-->
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <!-- Scrollviewers s data grids -->
            <RowDefinition Height="Auto" />
            <!-- Tlačítka -->
            <RowDefinition Height="2*" />
            <!-- Canvas -->
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <!-- Scrollviewers s data grids -->

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <!--Scrollviewer s heading data grid-->
                <RowDefinition Height="*" />
                <!--Scrollviewer s content data grid-->
            </Grid.RowDefinitions>

            <ScrollViewer x:Name="HeadingGridScrollViewer" Grid.Row="0" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Hidden">
                <!--Height="26">-->

                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!-- Header DataGrid -->
                    <DataGrid x:Name="HeadingDataGrid" Grid.Column="0" DataContext="{Binding GridViewModel}" 
                        AutoGenerateColumns="True" HeadersVisibility="Column"
                        HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled"
                        CanUserResizeColumns="True" CanUserAddRows="False" 
                        CanUserDeleteRows="False" CanUserResizeRows="False" 
                        CanUserSortColumns="False" CanUserReorderColumns="False"
                        RowHeight="0"
                        ItemsSource="{Binding ColumnTable}">
                        <b:Interaction.Behaviors>
                            <behaviors:DataGridDragBehavior
                                GetDraggedGridViewColumnCommand="{Binding GetDraggedGridViewColumnCommand}"
                                behaviors:SharedBehaviorProperties.ChangeCursorCommand="{Binding ChangeCursorWhenOperatingGridCommand}"
                                behaviors:SharedBehaviorProperties.ParentCanvas="{Binding ElementName=ElementCanvas}"
                                behaviors:SharedBehaviorProperties.ContentDataGrid="{Binding ElementName=ContentDataGrid}"
                                behaviors:SharedBehaviorProperties.HeadingDataGrid="{Binding ElementName=HeadingDataGrid}"
                                behaviors:SharedBehaviorProperties.ScrollViewerWithDataGrids="{Binding ElementName=DataGridsScrollViewer}"
                                behaviors:SharedBehaviorProperties.HeadingScrollViewer="{Binding ElementName=HeadingGridScrollViewer}"         />
                        </b:Interaction.Behaviors>
                    </DataGrid>
                    <Border Grid.Column="1" Background="LightGray"/>
                </Grid>
                <!--<b:Interaction.Behaviors>
                    <behaviors:DataContentScrollViewerBehavior
               behaviors:SharedBehaviorProperties.HeadingDataGrid="{Binding ElementName=HeadingDataGrid}"/>
                </b:Interaction.Behaviors>-->
            </ScrollViewer>



            <ScrollViewer x:Name="DataGridsScrollViewer" Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid Grid.Column="0" x:Name="ContentDataGrid" DataContext="{Binding GridViewModel}" 
                           ItemsSource="{Binding Table}" AutoGenerateColumns="True" 
                           CanUserAddRows="False" HeadersVisibility="None" 
                           HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" ColumnWidth="Auto">
                        <b:Interaction.Behaviors>
                            <behaviors:DataGridDragBehavior
                                GetDraggedGridViewColumnCommand="{Binding GetDraggedGridViewColumnCommand}"
                                behaviors:SharedBehaviorProperties.ChangeCursorCommand="{Binding ChangeCursorWhenOperatingGridCommand}"
                                behaviors:SharedBehaviorProperties.ParentCanvas="{Binding ElementName=ElementCanvas}"
                                behaviors:SharedBehaviorProperties.HeadingDataGrid="{Binding ElementName=HeadingDataGrid}"
                                behaviors:SharedBehaviorProperties.ScrollViewerWithDataGrids="{Binding ElementName=DataGridsScrollViewer}"/>
                        </b:Interaction.Behaviors>
                    </DataGrid>
                    <Border Grid.Column="1" Background="LightGray"/>
                </Grid>
                <b:Interaction.Behaviors>
                    <behaviors:DataContentScrollViewerBehavior
                               behaviors:SharedBehaviorProperties.HeadingScrollViewer="{Binding ElementName=HeadingGridScrollViewer}"/>
                </b:Interaction.Behaviors>
            </ScrollViewer>
            <!-- Content DataGrid -->


        </Grid>
        <!--</ScrollViewer>-->

        <Grid Grid.Row="1">
            <StackPanel Orientation="Horizontal" Background="Transparent">
                <!-- Buttons -->
                <Button Width="120" Margin="10" Content="Add Element"
                    Command="{Binding CanvasViewModel.StartAddingElementCommand}">

                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ToggleButtonBaseStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SharedState.IsDrawingElementModeActive}" Value="True">
                                    <Setter Property="Background" Value="DarkGray" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="120" Margin="10" Content="Start Relation"
                    Command="{Binding CanvasViewModel.StartRelationCreatingCommand}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ToggleButtonBaseStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SharedState.IsDrawingRelationModeActive}" Value="True">
                                    <Setter Property="Background" Value="DarkGray" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="120" Margin="10" Content="Delete" Command="{Binding CanvasViewModel.DeleteSelectionCommand}" />
            </StackPanel>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <!-- For Canvas -->
                <ColumnDefinition Width="200" />
                <!-- For Selected Item Details -->
            </Grid.ColumnDefinitions>
            <!-- Canvas inside Border -->
            <Border Grid.Column="0" BorderBrush="Black" BorderThickness="2" MaxHeight="300">

                <Canvas x:Name="ElementCanvas" Background="Transparent">
                    <!-- Interaction triggers -->

                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseLeftButtonDown">
                            <utilities:MousePositionInvokeCommandAction
                                Command="{Binding CanvasViewModel.CanvasMouseLeftButtonDownCommand}"
                                CommandParameter="{x:Reference Name=ElementCanvas}" />
                        </b:EventTrigger>
                        <b:EventTrigger EventName="MouseLeftButtonUp">
                            <utilities:MousePositionInvokeCommandAction
                                Command="{Binding CanvasViewModel.CanvasMouseLeftButtonUpCommand}"
                                CommandParameter="{x:Reference Name=ElementCanvas}" />
                        </b:EventTrigger>
                        <b:EventTrigger EventName="MouseMove">
                            <utilities:MousePositionInvokeCommandAction
                                Command="{Binding CanvasViewModel.CanvasMouseMoveCommand}"
                                CommandParameter="{x:Reference Name=ElementCanvas}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>


                    <!-- ItemsControl for Canvas items -->
                    <ItemsControl ItemsSource="{Binding CanvasViewModel.CanvasItems}"
                                  ItemTemplateSelector="{StaticResource MyTemplateSelector}">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left" Value="{Binding XPosition}" />
                                <Setter Property="Canvas.Top" Value="{Binding YPosition}" />
                                <Setter Property="Panel.ZIndex" Value="{Binding ZIndex}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>

                    </ItemsControl>
                </Canvas>
            </Border>


            <!-- Selected Item Details -->
            <StackPanel Grid.Column="1" Margin="10" Background="Transparent">
                <TextBlock Text="Selected item Title" FontWeight="Bold" />
                <TextBlock Margin="5"
                           Text="{Binding CanvasViewModel.SelectedSingleItem.Title, FallbackValue='No element selected'}" />
                <Grid>

                    <DataGrid>
                        
                    </DataGrid>
                </Grid>
            </StackPanel>
        </Grid>
    </Grid>
</Page>