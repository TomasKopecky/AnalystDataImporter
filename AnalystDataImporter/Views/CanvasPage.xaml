<Page x:Class="AnalystDataImporter.Views.CanvasPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:viewModel="clr-namespace:AnalystDataImporter.ViewModels"
      xmlns:utilities="clr-namespace:AnalystDataImporter.Utilities"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Canvas">

    <Page.Resources>
        <Style x:Key="ToggleButtonBaseStyle" TargetType="Button">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
        <DataTemplate x:Key="ElementTemplate" DataType="{x:Type viewModel:ElementViewModel}">
            <Grid>
                <!-- Interaction Behavior for Grid Size -->
                <b:Interaction.Behaviors>
                    <utilities:GridSizeBehavior ElementViewModel="{Binding}"
                                                utilities:SharedBehaviorProperties.ParentCanvas="{Binding ElementName=ElementCanvas}"/>
                </b:Interaction.Behaviors>

                <!-- Border inside the Grid -->
                <Border BorderThickness="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="BorderBrush" Value="LightBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <!-- Inner Grid containing Ellipse and TextBlock -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- TODO: nastavit konstantní hodnoty z Constants třídy, jako StrokeThickness, width elisy, atd.-->
                        <!-- Ellipse centered in the Inner Grid -->
                        <Ellipse Grid.Row="0" Width="50" Height="50" Fill="White" Stroke="Black" StrokeThickness="2" HorizontalAlignment="Center">
                            <b:Interaction.Behaviors>
                                <utilities:ElipseBehavior IsDraggingElementEnabled="{Binding DataContext.IsDraggingElementModeActive,
                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                            IsDrawingElementEnabled="{Binding DataContext.IsDrawingElementModeActive,
                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                            IsDrawingRelationEnabled="{Binding DataContext.IsDrawingRelationModeActive,
                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                            ChangeCursorCommand="{Binding DataContext.ChangeCursorWhenOperatingElementCommand, 
                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                            FinishDrawingElementCommand="{Binding DataContext.FinishDrawingElementCommand, 
                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                            RelationStartOrEndElementSetCommand="{Binding DataContext.GetRelationStartOrEndElementCommand, 
                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                            utilities:SharedBehaviorProperties.ParentCanvas="{Binding ElementName=ElementCanvas}"
                            ParentGrid="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" />
                                <!--ElementSelectedCommand="{Binding DataContext.SelectElementCommand, ElementName=ElementCanvas}"-->
                            </b:Interaction.Behaviors>
                        </Ellipse>

                        <!-- TextBlock below the Ellipse in the Inner Grid -->
                        <TextBlock Grid.Row="1" Text="{Binding Label}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,5,0,0" />
                    </Grid>
                </Border>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="RelationTemplate" DataType="{x:Type viewModel:RelationViewModel}">
            <Line X1="{Binding X1}" Y1="{Binding Y1}"
              X2="{Binding X2}" Y2="{Binding Y2}"
              StrokeThickness="2"
              IsHitTestVisible="{Binding IsFinished, FallbackValue=True}">
                <Line.Style>
                    <Style TargetType="Line">
                        <Setter Property="Stroke" Value="Black" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter Property="Stroke" Value="LightBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Line.Style>
                <b:Interaction.Behaviors>
                    <utilities:LineBehavior IsEnabled="{Binding DataContext.IsDraggingElementModeActive,
                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                    RelationDeleteWhenOutsideCanvasCommand="{Binding DataContext.RelationDeleteWhenOutsideCanvasCommand, 
                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                    utilities:SharedBehaviorProperties.ParentCanvas="{Binding ElementName=ElementCanvas}"/>
                </b:Interaction.Behaviors>
            </Line>
        </DataTemplate>

        <utilities:MyTemplateSelector x:Key="MyTemplateSelector" ElementTemplate="{StaticResource ElementTemplate}" RelationTemplate="{StaticResource RelationTemplate}" />
    </Page.Resources>

    <!-- Hlavní kontejner pro obsah stránky -->
    <Grid>
        <StackPanel Orientation="Horizontal">
            <StackPanel Width="590">
                <!-- Tlačítko pro přidání prvku na plátno -->
                <!--<Button Content="Add Element" Width="120" Margin="10" Command="{Binding StartAddingElementCommand}" />-->
                <Button Width="120" Margin="10"  Content="Add Element" Command="{Binding StartAddingElementCommand}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ToggleButtonBaseStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsDrawingElementModeActive}" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!-- Tlačítko pro zahájení kreslení vazby -->
                <Button Content="Start Relation" Width="120" Margin="10" Command="{Binding StartRelationCreatingCommand}" />
                <!--IsEnabled="{Binding IsRelationDrawingModeActive}"-->

                <Button Content="Delete" Width="120" Margin="10" Command="{Binding DeleteSelectionCommand}" />

                <!--<Button Content="Kreslit vazbu" Width="120" Margin="10" Command="{Binding AddRelationCommand}" />-->
                <Border BorderBrush="Black" BorderThickness="2" Height="301" Margin="0,0,0.4,0">
                    <!-- Plátno pro zobrazení prvků -->
                    <Canvas Cursor="{Binding CanvasCursor}" Name="ElementCanvas" Background="Transparent" Margin="0.4,0.4,-0.2,8.6">

                        <!-- Interaction triggers -->
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="MouseLeftButtonDown">
                                <utilities:MousePositionInvokeCommandAction
                                Command="{Binding CanvasMouseLeftButtonDownCommand}"
                                CommandParameter="{x:Reference Name=ElementCanvas}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="MouseLeftButtonUp">
                                <utilities:MousePositionInvokeCommandAction
                                Command="{Binding CanvasMouseLeftButtonUpCommand}"
                                CommandParameter="{x:Reference Name=ElementCanvas}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="MouseMove">
                                <utilities:MousePositionInvokeCommandAction
                                Command="{Binding CanvasMouseMoveCommand}"
                                CommandParameter="{x:Reference Name=ElementCanvas}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>

                        <ItemsControl ItemsSource="{Binding CanvasItems}" ItemTemplateSelector="{StaticResource MyTemplateSelector}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Canvas.Left" Value="{Binding XPosition}" />
                                    <Setter Property="Canvas.Top" Value="{Binding YPosition}" />
                                    <Setter Property="Panel.ZIndex" Value="{Binding ZIndex}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </Canvas>
                </Border>
            </StackPanel>
            <StackPanel Width="200" Margin="10">
                <TextBlock Text="Selected item Title" FontWeight="Bold" />
                <TextBlock Margin="5" Text="{Binding SelectedSingleItem.Title, FallbackValue='No element selected'}" />
            </StackPanel>
        </StackPanel>
    </Grid>
</Page>